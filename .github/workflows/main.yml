name: Fullstack App CI/CD for Azure VM

on:
  push:
    branches:
      - main


jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: List directory for debug
      run: |
        echo "📂 Listing project files..."
        ls -R

    - name: Python Syntax Check (Backend)
      run: |
        echo "🔍 Running Python syntax checks..."
        python3 -m py_compile Automation_Test-main/CI_CD_DummyCode/backend/app.py

    - name: Create ZIP Artifact
      run: |
        echo "📦 Creating ZIP build artifact..."
        zip -r fullstack-app-build.zip Automation_Test-main/CI_CD_DummyCode -x "*.git*" "*.github*"

    - name: Upload to JFrog Artifactory
      run: |
        echo "⬆️ Uploading to JFrog Artifactory..."
        curl -H "X-JFrog-Art-Api: ${{ secrets.ARTIFACTORY_API_KEY }}" \
             -T fullstack-app-build.zip \
             "${{ secrets.ARTIFACTORY_URL }}/${{ secrets.ARTIFACTORY_REPO }}/fullstack-app/fullstack-app-build-${{ github.run_number }}.zip"

    - name: SCP ZIP to Azure VM
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "fullstack-app-build.zip"
        target: "~/" 

    - name: SSH Deploy ZIP to Web Directory (Nginx + Gunicorn)
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "📦 Unzipping artifact..."
          rm -rf ~/fullstack-app && mkdir -p ~/fullstack-app
          unzip -o ~/fullstack-app-build.zip -d ~/fullstack-app

          echo "🛠️ Installing Python & Nginx..."
          sudo apt update
          sudo apt install -y python3 python3-pip python3-venv nginx unzip

          cd ~/fullstack-app/Automation_Test-main/CI_CD_DummyCode/backend

          echo "🐍 Creating virtual environment and activating..."
          python3 -m venv venv
          source venv/bin/activate

          echo "📦 Upgrading pip and installing dependencies..."
          pip install --upgrade pip
          pip install -r requirements.txt
    
          echo "🚀 Starting Flask backend app in background..."
          pkill -f "python app.py" || true
          # Use setsid to fully detach
          nohup setsid python app.py > backend.log 2>&1 < /dev/null &
          
          echo "⏳ Waiting for backend to start..."
          sleep 10
    
          echo "🌐 Running smoke test on backend..."
          curl --fail http://20.121.56.25:5000 || exit 1

          echo "🌐 Deploying frontend to Nginx..."
          sudo mkdir -p /var/www/html/
          sudo cp -r ~/fullstack-app/Automation_Test-main/CI_CD_DummyCode/frontend/* /var/www/html/
          sudo chmod -R 755 /var/www/html
          sudo chown -R www-data:www-data /var/www/html

          echo "⚙️ Configuring Nginx reverse proxy..."
          sudo bash -c 'cat > /etc/nginx/sites-available/default <<EOF
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.html index.htm;

              server_name _;

              location / {
                  try_files \$uri \$uri/ =404;
              }

              location /api/ {
                  proxy_pass http://127.0.0.1:5000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
              }
          }
          EOF'

          echo "🔄 Restarting Nginx..."
          sudo nginx -t && sudo systemctl restart nginx
          sudo systemctl status nginx || true

          echo "🧹 Cleaning up..."
          rm ~/fullstack-app-build.zip

    - name: Wait for Nginx to stabilize
      run: |
        echo "⏳ Waiting for web server to stabilize..."
        sleep 10

    - name: Smoke Test (Check Frontend)
      run: |
        echo "🌐 Running smoke test..."
        curl -v --fail --retry 5 --retry-delay 3 http://${{ secrets.SERVER_IP }}/ || exit 1
