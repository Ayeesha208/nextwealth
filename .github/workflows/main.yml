name: Fullstack App CI/CD for Azure VM

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List directory for debug
        run: |
          echo "üìÇ Listing project files..."
          ls -R

      - name: Python Syntax Check (Backend)
        run: |
          echo "üîç Running Python syntax checks..."
          python3 -m py_compile Automation_Test-main/CI_CD_DummyCode/backend/app.py

      - name: Create ZIP Artifact
        run: |
          echo "üì¶ Creating ZIP build artifact..."
          zip -r fullstack-app-build.zip Automation_Test-main/CI_CD_DummyCode -x "*.git*" "*.github*"

      - name: Upload to JFrog Artifactory
        run: |
          echo "‚¨ÜÔ∏è Uploading to JFrog Artifactory..."
          curl -H "X-JFrog-Art-Api: ${{ secrets.ARTIFACTORY_API_KEY }}" \
               -T fullstack-app-build.zip \
               "${{ secrets.ARTIFACTORY_URL }}/${{ secrets.ARTIFACTORY_REPO }}/fullstack-app/fullstack-app-build-${{ github.run_number }}.zip"

      - name: Deploy Code to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
            set -e

            # Navigate to working directory or clone repo if needed
            cd ~/Automation_Test || {
              git clone https://github.com/Ayeesha208/nextwealth.git ~/nextwealth
              cd ~/Automation_Test
            }

            git pull

            # Setup Python backend
            cd Automation_Test-main/CI_CD_DummyCode/backend
            python3 -m venv venv
            source venv/bin/activate
            pip install -r ../../requirements.txt

            # Kill previous backend if running
            pkill -f app.py || true

            # Run backend
            nohup python3 app.py > backend.log 2>&1 &

            # Serve frontend - adjust as needed
            cd ../frontend
            nohup python3 -m http.server 8080 > frontend.log 2>&1 &
          EOF
